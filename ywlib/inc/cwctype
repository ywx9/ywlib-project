#pragma once

#ifndef WEOF
#define WEOF ((wint_t)(0xFFFF))
#endif

#ifndef __ywlib_import
#ifndef __ywlib_export
namespace std {
using wctrans_t = wchar_t;
using wctype_t = uint16_t;
using wint_t = uint16_t;

int __cdecl iswalnum(wint_t);
int __cdecl iswalpha(wint_t);
int __cdecl iswascii(wint_t);
int __cdecl iswblank(wint_t);
int __cdecl iswcntrl(wint_t);
int __cdecl iswdigit(wint_t);
int __cdecl iswgraph(wint_t);
int __cdecl iswlower(wint_t);
int __cdecl iswprint(wint_t);
int __cdecl iswpunct(wint_t);
int __cdecl iswspace(wint_t);
int __cdecl iswupper(wint_t);
int __cdecl iswxdigit(wint_t);

int __cdecl iswctype(wint_t, wctype_t);
wctype_t __cdecl wctype(const char*);

wint_t __cdecl towupper(wint_t);
wint_t __cdecl towlower(wint_t);
wint_t __cdecl towctrans(wint_t c, wctrans_t);
wctrans_t __cdecl wctrans(const char*);
} // namespace std
#else
extern "C" {
using wctrans_t = wchar_t;
using wctype_t = uint16_t;
using wint_t = uint16_t;

int __cdecl iswalnum(wint_t);
int __cdecl iswalpha(wint_t);
int __cdecl iswascii(wint_t);
int __cdecl iswblank(wint_t);
int __cdecl iswcntrl(wint_t);
int __cdecl iswdigit(wint_t);
int __cdecl iswgraph(wint_t);
int __cdecl iswlower(wint_t);
int __cdecl iswprint(wint_t);
int __cdecl iswpunct(wint_t);
int __cdecl iswspace(wint_t);
int __cdecl iswupper(wint_t);
int __cdecl iswxdigit(wint_t);

int __cdecl iswctype(wint_t, wctype_t);
wctype_t __cdecl wctype(const char*);

wint_t __cdecl towupper(wint_t);
wint_t __cdecl towlower(wint_t);
wint_t __cdecl towctrans(wint_t c, wctrans_t);
wctrans_t __cdecl wctrans(const char*);
}
export namespace std {
using ::wctrans_t;
using ::wctype_t;
using ::wint_t;

using ::iswalnum;
using ::iswalpha;
using ::iswascii;
using ::iswblank;
using ::iswcntrl;
using ::iswdigit;
using ::iswgraph;
using ::iswlower;
using ::iswprint;
using ::iswpunct;
using ::iswspace;
using ::iswupper;
using ::iswxdigit;

using ::iswctype;
using ::wctype;

using ::towctrans;
using ::towlower;
using ::towupper;
using ::wctrans;
} // namespace std
#endif
#endif
